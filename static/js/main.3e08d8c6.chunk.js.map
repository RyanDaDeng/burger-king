{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigattionItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/Order.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigattionItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/ShoppingCart/ShoppingCart.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/ShoppingCart/ShoppingCart.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","api/axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","Input","Label","InputElement","Invalid","ValidationError","BuildControl","Less","More","Toolbar","DesktopOnly","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Order","Ingredient","Content","__webpack_require__","p","NavigationItems","DrawerToggle","ShoppingCart","Backdrop","Burger","Modal","Loader","load5","CheckoutSummary","ContactData","logo","props","react_default","a","createElement","className","styles","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","exact","activeClassName","children","navigationItems","drawerToggle","onClick","clicked","connect","state","ingredients","totalPrice","Fragment","toFixed","toolbar","drawerToggleClicked","components_ShoppingCart_ShoppingCart","backdrop","show","sideDrawer","attachedClasses","open","closed","join","Layout","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","this","Component","BurgerIngredient","ingredient","type","prototypes","PropTypes","string","isRequired","withRouter","console","log","transformedIngredients","Object","keys","map","ingredientKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","_ref","disabled","label","removed","added","controls","buildControls","price","control","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","canPurchase","ordered","nextProps","nextState","nextContext","modalClosed","style","transform","opacity","button","classes","btnType","OrderSummary","_this$props","purchaseCanceled","purchaseContinued","igKey","textTransform","axiosOrders","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","BurgerBuilder","purchasing","isLoading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","pathname","totalQuantity","values","sum","disabledInfo","objectSpread","orderSummary","burger","Spinner","conrtols","onIngredientAdded","onIngredientRemoved","updatePurchaseState","Burger_OrderSummary_OrderSummary","dispatch","ingName","ingredientName","checkoutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","validationError","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","loading","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","react_router","path","match","component","ingredientsTransformed","customer","hasOwnProperty","amount","ingredientOutput","ig","Number","parseFloat","orders","get","data","err","_i","_Object$entries","entries","_ref3","_ref2","slicedToArray","Order_Order","App","hoc_Layout_Layout","Orders","Boolean","window","location","hostname","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","undefined","action","defineProperty","store","createStore","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e08d8c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigattionItem_NavigationItem__2Rv-f\",\"active\":\"NavigattionItem_active__3UFsf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\",\"Ingredient\":\"Order_Ingredient__3TktI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigattionItems_NavigationItems__34QK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShoppingCart\":\"ShoppingCart_ShoppingCart__27DWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load5\":\"Spinner_load5__2ciOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png'\nimport styles from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className={styles.Logo}>\n        <img src={burgerLogo} alt=\"My Burger King\"/>\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport styles from './NavigattionItem.module.css';\nimport {NavLink} from 'react-router-dom';\nconst navigationItem = (props) => (\n    <li className={styles.NavigationItem}>\n        <NavLink to={props.link} exact={props.exact} activeClassName={styles.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport styles from './NavigattionItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={styles.NavigationItems}>\n        <NavigationItem link='/' exact>Burger Builder</NavigationItem>\n        <NavigationItem link='/checkout'>Checkout</NavigationItem>\n        <NavigationItem link='/my-orders'>My Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport styles from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={styles.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react'\nimport {connect} from \"react-redux\";\nimport styles from './ShoppingCart.module.css';\n\nconst ShoppingCart = (props) => (\n    <>\n        <div className={styles.ShoppingCart}>\n            <div>Total Price: {props.totalPrice.toFixed(2)}</div>\n        </div>\n\n    </>\n);\n\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.ingredients,\n        totalPrice: state.totalPrice\n    }\n};\nexport default connect(mapStateToProps)(ShoppingCart);","import React from 'react'\nimport styles from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\nimport ShoppingCart from \"../../ShoppingCart/ShoppingCart\";\n\nconst toolbar = (props) => (\n    <header className={styles.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className={styles.Logo}>\n            <Logo/>\n        </div>\n        <ShoppingCart/>\n\n        <nav className={styles.DesktopOnly}>\n            <NavigationItems/>\n        </nav>\n    </header>\n);\n\n\nexport default toolbar;","import React from 'react';\nimport styles from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={styles.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport styles from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [styles.SideDrawer, styles.Close];\n\n    if(props.open){\n        attachedClasses = [styles.SideDrawer, styles.Open];\n    }\n    return (\n        <React.Fragment>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={styles.Logo}>\n                    <Logo/>\n                </div>\n                <nav>\n                    <NavigationItems/>\n                </nav>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default sideDrawer;","import React, {Component} from 'react';\nimport styles from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    };\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    };\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\n                <main className={styles.Content}>\n                    {this.props.children}\n                </main>\n            </>\n        )\n    }\n}\n\nexport default Layout;\n","import React, {Component} from 'react';\nimport styles from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={styles.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={styles.BreadTop}>\n                        <div className={styles.Seeds1}></div>\n\n                        <div className={styles.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={styles.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={styles.Cheese}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={styles.Bacon}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={styles.Salad}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n        return ingredient;\n    }\n};\n\n\nBurgerIngredient.prototypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\nimport styles from './Burger.module.css'\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nimport {withRouter} from 'react-router-dom';\n\nconst burger = (props) => {\n\n    // get keys\n    console.log(props.ingredients);\n    let transformedIngredients = Object.keys(props.ingredients).map(ingredientKey => {\n        return [...Array(props.ingredients[ingredientKey])].map(\n            (_, i) => {\n                return <BurgerIngredient key={ingredientKey + i} type={ingredientKey}/>\n            }\n        );\n    }).reduce((arr, el) => {\n        // reduce means construct a new array\n        // arr here initially is [], and loop each element and use concat to merge array and return\n        // a new merged array\n        // in this way, transform the data into one single array\n        return arr.concat(el);\n    }, []);\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n\n    return (\n        <div className={styles.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n\n            {transformedIngredients}\n\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n};\n\nexport default withRouter(burger);","import React from 'react';\nimport styles from './BuildControl.module.css'\n\nfunction BuildControl({disabled, label, removed, added}) {\n    return (\n        <div className={styles.BuildControl}>\n            <div className={styles.Label}>{label}</div>\n            <button\n                disabled={disabled}\n                onClick={removed}\n                className={styles.Less}>\n                -\n            </button>\n            <button\n                onClick={added}\n                className={styles.More}>\n                +\n            </button>\n        </div>\n    )\n}\n\nexport default BuildControl;","import React from 'react';\nimport styles from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'}\n];\n\nconst buildControls = (props) => {\n    return (\n        <div className={styles.BuildControls}>\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n            {controls.map((control) => {\n                return <BuildControl\n                    disabled={props.disabled[control.type]}\n                    added={() => props.ingredientAdded(control.type)}\n                    removed={() => props.ingredientRemoved(control.type)}\n                    key={control.label}\n                    label={control.label}\n                />\n            })}\n\n            <button className={styles.OrderButton} disabled={!props.canPurchase} onClick={props.ordered}>ORDER NOW</button>\n        </div>\n    )\n};\n\nexport default buildControls;","import React, {Component} from 'react';\nimport styles from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n\n    // todo question\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        console.log('[modal] updated')\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div className={styles.Modal}\n                     style={\n                         {\n                             transform: this.props.show ? 'translateY(0)' : 'translate(-100vh)',\n                             opacity: this.props.show ? '1' : '0'\n                         }\n                     }>\n                    {this.props.children}\n                </div>\n            </React.Fragment>\n        );\n    }\n};\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, {Component} from 'react';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n\n    // This could be a functional component, doesn't have to be a class\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        console.log('[order summary]check')\n    }\n\n    render() {\n        const {totalPrice, purchaseCanceled, purchaseContinued, ingredients } = this.props;\n\n        return (\n            <>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {Object.keys(ingredients).map(igKey => (\n                        <li key={igKey}>\n                            <span style={{textTransform: 'capitablize'}}>{igKey}:{ingredients[igKey]}</span>\n                        </li>\n                    ))}\n                </ul>\n                <p><strong>Total Price: {totalPrice.toFixed(2)} </strong></p>\n                <p>Continue to Checkout?</p>\n                <Button clicked={purchaseCanceled} btnType={'Danger'}>CANCEL</Button>\n                <Button clicked={purchaseContinued} btnType={'Success'}>CONTINUE</Button>\n            </>\n        );\n    }\n}\n\n\nexport default OrderSummary;","import axios from 'axios';\n\nconst axiosOrders = axios.create({\n    baseURL: 'https://burgerking-backend.firebaseio.com/',\n});\n\n\nexport default axiosOrders;\n","import React from 'react';\n\nimport styles from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={styles.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, {Component} from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        };\n\n        componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            console.log('will un amount', this.reqInterceptor);\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        };\n\n        render() {\n            return (\n                <>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </>\n            );\n        }\n    }\n};\n\nexport default withErrorHandler;","import React, {Component} from 'react';\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axiosOrders from \"../../api/axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\n\nimport * as actionTypes from '../../store/actions';\nimport {connect} from \"react-redux\";\n\n\n\nclass BurgerBuilder extends Component {\n\n    // constructor(props){\n    //     super(props);\n    //     this.state = {}\n    // }\n\n    state = {\n        canPurchase: false,\n        purchasing: false,\n        isLoading: false,\n        error: false\n    };\n\n    componentDidMount() {\n        // axiosOrders.get('https://burgerking-backend.firebaseio.com/ingredients.json')\n        //     .then(response => {\n        //         this.setState({ingredients: response.data})\n        //     }).catch(error => {\n        //     this.setState({error: true})\n        // });\n    }\n\n    updatePurchaseState(ingredients) {\n        const totalQuantity = Object.values(ingredients).reduce((sum, el) => {\n            return sum + el;\n        }, 0);\n\n        console.log(totalQuantity);\n        return totalQuantity > 0;\n    }\n\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    };\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    };\n\n    purchaseContinueHandler = () => {\n        console.log('22')\n        this.props.history.push({\n            pathname: '/checkout'\n        });\n    };\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients cannot be loaded!</p> : <Spinner/>;\n        if (this.props.ingredients !== null) {\n            burger = (\n                <>\n                    <Burger ingredients={this.props.ingredients}/>\n\n                    <BuildControls\n                        disabled={disabledInfo}\n                        conrtols={this.props.ingredients}\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        canPurchase={this.updatePurchaseState(this.props.ingredients)}\n                        price={this.props.totalPrice}\n                        ordered={this.purchaseHandler}\n                    />\n                </>\n            );\n\n\n            orderSummary = <OrderSummary ingredients={this.props.ingredients}\n                                         purchaseCanceled={this.purchaseCancelHandler}\n                                         purchaseContinued={this.purchaseContinueHandler}\n                                         totalPrice={this.props.totalPrice}\n            />;\n\n        }\n\n        if (this.state.isLoading) {\n            orderSummary = <Spinner/>;\n        }\n\n\n        return (\n            <>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n\n                {burger}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.ingredients,\n        totalPrice: state.totalPrice\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENTS, ingredientName: ingName}),\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENTS, ingredientName: ingName})\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder, axiosOrders));","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';","import React from 'react'\nimport styles from './CheckoutSummary.module.css';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={styles.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button btnType=\"Danger\" clicked={props.onCheckoutCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.onCheckoutContinued}>CONTINUE</Button>\n        </div>\n    );\n};\n\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n\n\n    let validationError = null;\n    if (props.invalid && props.touched) {\n        validationError = <p className={classes.ValidationError}>Please enter a valid {props.elementType}</p>;\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n\n};\n\nexport default input;","import React, {Component} from 'react';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport Input from '../../../components/UI/Input/Input';\nimport axiosOrders from \"../../../api/axios-orders\";\nimport {withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true,\n                touched: false\n            }\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({loading: true});\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.totalPrice,\n            orderData: formData\n        };\n        axiosOrders.post('/orders.json', order)\n            .then(response => {\n                this.setState({loading: false});\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({loading: false});\n            });\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner/>;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.ingredients,\n        totalPrice: state.totalPrice\n    }\n};\nexport default connect(mapStateToProps)(withRouter(ContactData));","import React, {Component} from 'react';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\n\nimport {Route} from 'react-router-dom';\nimport ContactData from \"./ContactData/ContactData\";\nimport {connect} from \"react-redux\";\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    };\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    };\n\n    render() {\n        return (\n            <div>\n                <CheckoutSummary onCheckoutCancelled={this.checkoutCancelledHandler}\n                                 onCheckoutContinued={this.checkoutContinuedHandler}\n                                 ingredients={this.props.ingredients}>\n                </CheckoutSummary>\n                <Route path={this.props.match.path + '/contact-data'}\n                       component={ContactData}/>\n            </div>\n\n        //     <Route path={this.props.match.path + '/contact-data'}\n        // render={() => (\n        //     <ContactData ingredients={this.props.ingredients} totalPrice={this.props.totalPrice}/>)}/>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.ingredients,\n        totalPrice: state.totalPrice\n    }\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport styles from './Order.module.css';\n\nfunction Order({ingredients, price, customer}) {\n\n\n    const ingredientsTransformed = [];\n\n    for (let ingredientName in ingredients) {\n        if(ingredients.hasOwnProperty(ingredientName)){\n            ingredientsTransformed.push(\n                {\n                    name: ingredientName,\n                    amount: ingredients[ingredientName]\n                }\n            )\n        }\n    }\n\n    const ingredientOutput = ingredientsTransformed.map(ig =>{\n        return <span className={styles.Ingredient} key={ig.name}>{ig.name} ({ig.amount}) </span>\n    });\n\n    console.log(ingredientOutput);\n\n    return (\n        <div className={styles.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: {Number.parseFloat(price).toFixed(2)} </p>\n        </div>\n    )\n}\n\nexport default Order;","import React, {Component} from 'react';\nimport axiosOrders from \"../../api/axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Order from \"../../components/Order/Order\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends Component {\n\n    state = {\n        orders: [],\n        isLoading: false,\n        error: false\n    };\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n        axiosOrders.get('https://burgerking-backend.firebaseio.com/orders.json')\n            .then(\n                response => {\n                    this.setState({orders: response.data, isLoading: false})\n                })\n            .catch(err => {\n                this.setState({isLoading: false, error: true})\n            })\n    }\n\n    render() {\n\n        let orders = [];\n\n\n        if (this.state.error) {\n            orders = <p>Orders cannot be retrieved!</p>\n        }\n        if (!this.state.isLoading) {\n            for (let [key, order]  of Object.entries(this.state.orders)) {\n                orders.push(\n                    <Order key={key} ingredients={order['ingredients']} price={order['price']} customer={order['customer']}></Order>\n                )\n            }\n        } else {\n            orders = <Spinner/>;\n        }\n        return (\n            <>\n                {orders}\n            </>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders,axiosOrders);","import React, {Component} from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <Switch>\n                        <Route path=\"/my-orders\" component={Orders}/>\n                        <Route path=\"/checkout\" component={Checkout}/>\n                        <Route path=\"/\" component={BurgerBuilder}/>\n                    </Switch>\n                </Layout>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n    },\n    totalPrice: 4\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENTS:\n            console.log('added')\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENTS:\n            console.log('removed')\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}